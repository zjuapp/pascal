sub sp, 8
xor si,si
mov si, 0
mov bp, sp
mov [bp + 0], si
xor si,si
mov si, 0
mov bp, sp
mov [bp + 4], si
baab:
xor si,si
mov si, 10
mov ax, [bp + 4]
cmp ax, si
jz caab
mov bp, sp
mov bp, sp
mov di, [bp + 0]

mov [bp - 8], di
mov bp, sp
mov di, [bp + 4]

mov [bp - 12], di
sub sp, 12
call outer_add
add sp, 8
move bp, sp
mov ax, [bp]
add sp, 4
mov di, ax
mov bp, sp
mov [bp + 0], di
mov ax, [bp + 4]
add ax, 1
mov [bp + 4], ax
jmp baab
caab:
mov ah, 4ch
int 21h
outer_add:
mov bp, sp
mov di, [bp + 8]
mov bp, sp
mov bx, [bp + 4]
add di, bx
mov bp, sp
mov [bp + 12], di
ret
